name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.14
      - uses: DanySK/build-check-deploy-gradle-action@2.3.2
        with:
          deploy-command: >-
            ./gradlew
            uploadKotlin
            uploadPluginMavenToMavenCentralNexus
            uploadGitHooksPluginMarkerMavenToMavenCentralNexus
            close
            drop
            --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: >-
            ${{
            runner.os == 'Linux'
            && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
            }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    concurrency:
      group: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - uses: DanySK/build-check-deploy-gradle-action@2.3.2
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          should-validate-wrapper: false
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that the workflow executed and there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
